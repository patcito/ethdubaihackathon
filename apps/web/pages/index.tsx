import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Home.module.css";

import { ethers } from "ethers";
import {
  ConnectWallet,
  useWallet,
  NETWORKS,
  useWriteContract,
} from "@web3-ui/core";
import React, { useContext } from "react";
const ADDRESS = "0x4380E0e644946ae513ba9170be935BFe42d44AB2";
import ABI from "../../abis/Hackathon.json";
import { setMaxListeners } from "events";

const Home: NextPage = () => {
  const { connection } = useWallet();
  const [contract, isReady] = useWriteContract(ADDRESS, ABI.abi);
  const [projects, setProjects] = React.useState<
    ethers.utils.TransactionDescription[]
  >([]);

  const [project, setProject] = React.useState({
    name: "",
    repo: "",
    demoUrl: "",
    address: "",
    description: "",
  });
  const getLogs = async () => {
    if (!contract?.filters) return;

    try {
      const logs = await contract.filters.Log();
      const query = await contract.queryFilter(logs);
      const inter = new ethers.utils.Interface(ABI.abi);
      const txs: ethers.utils.TransactionDescription[] = [];
      console.log("getLogsss");
      query.forEach(async (q, i) => {
        const tx = await q.getTransaction();
        const decodedInput = inter.parseTransaction({
          data: tx.data,
          value: tx.value,
        });
        txs.push(decodedInput);
        console.log("tx", tx);
        console.log("decoded", decodedInput);
      });
      console.log("query", query);

      console.log("txs", txs);
      setProjects(projects.concat(txs));
    } catch (error) {
      console.log(error);
    }
  };
  React.useEffect(() => {
    console.log("useEffect");

    getLogs();
  }, []);
  const handleSubmitProject = async () => {
    const options = {};
    console.log(connection);
    console.log(contract);
    console.log(project);
    if (isReady && contract)
      await contract.setProject(
        project.repo,
        project.name,
        project.demoUrl,
        project.address,
        project.description,
        0,
        options
      );
    getLogs();
  };
  const handleInputChange = (e) => {
    const newProject = {};
    newProject[e.target.name] = e.target.value;
    setProject({ ...project, ...newProject });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Welcome to ETHDubai Hackathon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://www.ethdubaiconf.org/">ETHDubai</a>{" "}
          Hackathon
        </h1>
        <ConnectWallet />
        <div style={{ marginTop: "25px", width: "50%" }}>
          {connection.userAddress ? (
            <>
              <p>
                When you RSVP, you get $DDD 100, the DubaiDevDAO token. Revenue
                made from paid RSVP will be redistributed to token holders.
              </p>
              <div>
                <input
                  type="text"
                  name="name"
                  placeholder="Project Name"
                  onChange={handleInputChange}
                />
              </div>
              <div>
                <input
                  type="text"
                  name="repo"
                  placeholder="Project Repo"
                  onChange={handleInputChange}
                />
              </div>
              <div>
                <input
                  type="text"
                  name="demoUrl"
                  placeholder="Project Demo URL"
                  onChange={handleInputChange}
                />
              </div>{" "}
              <div>
                <input
                  type="text"
                  name="address"
                  placeholder="Project address"
                  onChange={handleInputChange}
                />
              </div>
              <div>
                <input
                  type="text"
                  name="description"
                  placeholder="Project Description"
                  onChange={handleInputChange}
                />
              </div>
              <button
                style={{ marginTop: "25px" }}
                className="chakra-button css-taj3dd"
                onClick={handleSubmitProject}
              >
                Click here to RSVP (ethereum mainnet only)
              </button>
              <ul>
                {projects.map((p, i) => (
                  <li>
                    {i})) {p.args[0]}
                  </li>
                ))}
              </ul>
              <div style={{ marginTop: "25px" }}>
                <h1></h1>
              </div>
              <p style={{ marginTop: "25px", width: "100%" }}></p>
            </>
          ) : null}
        </div>
      </main>
    </div>
  );
};

export default Home;
